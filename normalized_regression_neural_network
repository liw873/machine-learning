# Importing necessary libraries
import numpy as np
import pandas as pd
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.optimizers import Adam
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
from sklearn.preprocessing import StandardScaler

# Load the concrete data from the uploaded file
data = pd.read_csv('concrete_data.csv')

# Separate the predictors and the target
X = data.iloc[:, :-1].values  # All columns except the last one
y = data.iloc[:, -1].values   # The last column (concrete strength)

# Normalize the predictors (features)
scaler = StandardScaler()
X_normalized = scaler.fit_transform(X)

# Define a function to build the model with three hidden layers
def build_model(input_dim):
    model = Sequential()
    model.add(Dense(10, input_dim=input_dim, activation='relu'))  # First hidden layer with 10 nodes
    model.add(Dense(10, activation='relu'))  # Second hidden layer with 10 nodes
    model.add(Dense(10, activation='relu'))  # Third hidden layer with 10 nodes
    model.add(Dense(1))  # Output layer
    model.compile(optimizer=Adam(), loss='mean_squared_error')
    return model

# Initialize an empty list to store the mean squared errors
mse_list = []

# Loop 50 times
for i in range(50):
    # Split the normalized data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X_normalized, y, test_size=0.3, random_state=None)
    
    # Build the model
    model = build_model(input_dim=X_train.shape[1])
    
    # Train the model
    model.fit(X_train, y_train, epochs=50, verbose=0)
    
    # Predict on the test set
    y_pred = model.predict(X_test)
    
    # Compute the mean squared error
    mse = mean_squared_error(y_test, y_pred)
    mse_list.append(mse)

# Calculate the mean and standard deviation of the mean squared errors
mean_mse = np.mean(mse_list)
std_mse = np.std(mse_list)

print(f'Mean MSE with Three Hidden Layers: {mean_mse}')
print(f'Standard Deviation of MSE with Three Hidden Layers: {std_mse}')

## Results
## Mean MSE with Three Hidden Layers: 130.12527589463016
## Standard Deviation of MSE with Three Hidden Layers: 16.319554485684524
